rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  	// Allow users to read/write their own profile
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    // Items: Anyone can read, only admins can write
    match /items/{itemId} {
      allow read: if true;
      allow write: if request.auth != null && request.auth.token.admin == true;
    }
    
    // Servers: Users can read/write their own servers
    match /servers/{serverId} {
      allow read, write: if request.auth != null && request.auth.uid == resource.data.owner_id;
      allow create: if request.auth != null && request.auth.uid == request.resource.data.owner_id;
    }
    
    // Shops: Users can read/write their own shops, read public shops for comparison
    match /shops/{shopId} {
      allow read: if request.auth != null; // Allow reading all shops for comparison
      allow write: if request.auth != null && request.auth.uid == resource.data.owner_id;
      allow create: if request.auth != null && 
                      request.auth.uid == request.resource.data.owner_id &&
                      validateShop(request.resource.data);
    }
    
    // Shop validation function
    function validateShop(shop) {
      return shop.keys().hasAll(['name', 'server_id', 'owner_id', 'is_own_shop', 'created_at', 'updated_at']) &&
             shop.name is string && shop.name.size() > 0 &&
             shop.server_id is string && shop.server_id.size() > 0 &&
             shop.owner_id is string && shop.owner_id.size() > 0 &&
             shop.is_own_shop is bool &&
             shop.created_at is string &&
             shop.updated_at is string;
    }
  }
}